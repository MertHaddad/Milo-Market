{"version":3,"file":"static/js/246.fb6d3b9b.chunk.js","mappings":"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","sources":["components/pagination/usePagination.js","components/pagination/pagination.js","helpers/useDidMountEffect.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import React from \"react\";\nimport { useMemo } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const DOTS = \"...\";\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\n\n\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount,\n  currentPage,\n}) => {\n\n\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\n    const totalPageNumbers = siblingCount;\n\n    // # hide pagination when there's no enough pages to navigate.\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    //evaluate showing dots situation:\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 2 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      // let rightItemCount = 3 + 2 * siblingCount;\n      let rightItemCount = currentPage -1 \n      \n      let rightRange = range(\n        rightItemCount,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n\n    if (!shouldShowLeftDots && !shouldShowRightDots){\n\n      let leftRange = range(1, totalPageCount);\n\n      return [...leftRange];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n  return paginationRange;\n};\n\nusePagination.propTypes = {\n  totalCount : PropTypes.number,\n  pageSize : PropTypes.number,\n  siblingCount : PropTypes.number,\n  currentPage : PropTypes.number,\n};","import React, { useState } from \"react\";\nimport { usePagination, DOTS } from \"./usePagination\";\nimport \"./../../assets/css/pagination.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setQuery } from \"../../features/querySlice\";\nimport { getItems } from \"../../features/productSlice\";\nimport useDidMountEffect from \"../../helpers/useDidMountEffect\";\nconst Pagination = () => {\n  const dispatch = useDispatch();\n  const selectQuery = useSelector((state) => state.query.value);\n  const filteredProducts = useSelector((state) => state.filteredProducts);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPageChange = (p) => {\n    if (currentPage !== p) {\n      setCurrentPage(p);\n      const query = `_page=${p}&_limit=16`;\n      dispatch(setQuery(query));\n      dispatch(getItems(selectQuery));\n    }\n  };\n  \n  useDidMountEffect(() => {\n    onPageChange(1);\n  }, [filteredProducts.currentProductNumber]);\n\n  let totalCount = filteredProducts.currentProductNumber;\n  const siblingCount = 1;\n  const pageSize = 16;\n\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize,\n  });\n\n  if (currentPage === 0 || paginationRange?.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  let lastPage = paginationRange[paginationRange?.length - 1];\n  return (\n    <ul className=\"pagination-container\">\n      <li\n        className={`pagination-item ${currentPage === 1 ? \"disabled\" : \"\"}\n         )`}\n        onClick={onPrevious}\n      >\n        {/* <div className=\"arrow left\" /> */}\n        {\"<\"} Prev \n      </li>\n      {paginationRange.map((pageNumber, i) => {\n        if (pageNumber === DOTS) {\n          return (\n            <li key={i + \"dot\"} className=\"pagination-item dots\">\n              &#8230;\n            </li>\n          );\n        }\n\n        return (\n          <li\n            key={i}\n            className={`pagination-item ${\n              pageNumber === currentPage ? \"selected\" : \"\"\n            }`}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </li>\n        );\n      })}\n      <li\n        className={`pagination-item ${\n          currentPage === lastPage ? \"disabled\" : \"\"\n        }`}\n        onClick={onNext}\n      >\n         Next {\">\"}\n        {/* <div className=\"arrow right\" /> */}\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n\n\nconst useDidMountEffect = (func, dependacyArray) => {\n    const didMount = useRef(false);\n\n    useEffect(() => {\n        if (didMount.current) func();\n        else didMount.current = true;\n    }, dependacyArray);\n}\n\nuseDidMountEffect.propTypes  = {\n    func: PropTypes.func,\n    dependacyArray: PropTypes.array,\n  };\n\nexport default useDidMountEffect;","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["DOTS","range","start","end","length","Array","from","_","idx","usePagination","totalCount","pageSize","siblingCount","currentPage","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","propTypes","PropTypes","dispatch","useDispatch","selectQuery","useSelector","state","query","value","filteredProducts","useState","setCurrentPage","onPageChange","p","setQuery","getItems","useDidMountEffect","currentProductNumber","paginationRange","lastPage","className","onClick","map","pageNumber","i","func","dependacyArray","didMount","useRef","useEffect","current","_slicedToArray","arr","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}