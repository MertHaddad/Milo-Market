{"version":3,"file":"static/js/413.05523d03.chunk.js","mappings":"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","sources":["components/options/brandFilter.jsx","components/options/tagFilter.jsx","components/options/sort.jsx","components/options/options.jsx","helpers/useDidMountEffect.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import React, { useState, useTransition } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setQuery } from \"../../features/querySlice\";\nimport { getItems } from \"../../features/productSlice\";\nimport { getStockByTags } from \"../../features/allProductsSlice\";\nimport { getFilteredItemsNumber } from \"../../features/filteredProducts\";\nimport useDidMountEffect from \"../../helpers/useDidMountEffect\";\nimport Spinner from \"../spinner\";\n\nconst BrandFilter = () => {\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [selected, setSelected] = useState([\"All\"]);\n  const querySelector = useSelector((state) => state.query.value);\n  const selectBrand = useSelector((state) => state.allProducts.stockByBrand);\n  const productsNumberSelector = useSelector((state) => state.filteredProducts);\n  // const itemsSelector = useSelector((state) => state.product);\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const [isPending, startTransition] = useTransition();\n\n  useDidMountEffect(() => {\n    let res = selectBrand.filter((brand) =>\n      brand.brand.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())\n    );\n    setSearchResults(res);\n  }, [search]);\n\n  const handleChange = (e) => {\n    setShowSpinner(true);\n    startTransition(() => {\n      if (e.target.name === \"All\") {\n        setSelected(\n          selected.includes(\"All\")\n            ? selected.filter((item) => item !== \"All\")\n            : [\"All\"]\n        );\n      } else {\n        let filtered = selected;\n        if (selected.includes(\"All\")) {\n          filtered = selected.filter((item) => item !== \"All\");\n        }\n\n        setSelected(\n          filtered.includes(e.target.id)\n            ? filtered.filter((item) => item !== e.target.id)\n            : [...filtered, e.target.id]\n        );\n      }\n      let query = `manufacturer=${\n        e.target.id === \"All\" ? \"uncheck-brands\" : e.target.id\n      }`;\n      dispatch(setQuery(query));\n    });\n  };\n\n  useDidMountEffect(() => {\n\n    if (productsNumberSelector.status === \"fulfilled\") {\n      console.log(\"tags should update\");\n      dispatch(\n        getStockByTags({\n          query:querySelector,\n          selected: selected,\n          filteredProductsNum: productsNumberSelector.currentProductNumber,\n        })\n      );\n      setShowSpinner(false);\n    }\n  }, [productsNumberSelector]);\n\n  useDidMountEffect(() => {\n    dispatch(getItems(querySelector));\n    dispatch(getFilteredItemsNumber());\n  }, [selected]);\n\n  return (\n    <>\n      <input\n        onChange={(e) => setSearch(e.target.value)}\n        value={search}\n        type=\"text\"\n        placeholder=\"Search brand\"\n        className=\"search-bar\"\n      />\n      <span className=\"float-spinner\">\n      {showSpinner? <Spinner /> : null}\n      </span>\n      <div className=\"filter-body custom-scrollbar\">\n        <>\n\n          {selectBrand.length ? (\n            (searchResults.length ? searchResults : selectBrand).map(\n              (brand, i) =>\n                brand.products ? (\n                  <div className=\"form-group filter-item\" key={i}>\n                    <input\n                      key={selected}\n                      onChange={handleChange}\n                      type=\"checkbox\"\n                      name={brand.brand.name}\n                      // className=\"custom-checkbox\"\n                      data-testid=\"test-brand-filter-checkbox\"\n                      id={brand.brand.slug}\n                      defaultChecked={\n                        selected.includes(brand.brand.slug) ||\n                        selected.includes(brand.brand.name)\n                      }\n                    />\n                    <label\n                      className=\"filtering-label text-secondary\"\n                      htmlFor={brand.brand.slug}\n                    >\n                      {brand.brand.name}\n                      <span className=\"text-dark-gray\">\n                        {\" \"}\n                        ({brand.products})\n                      </span>\n                    </label>\n                  </div>\n                ) : null\n            )\n          ) : (\n            <Spinner />\n          )}\n\n        </>\n      </div>\n    </>\n  );\n};\n\nexport default BrandFilter;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setQuery } from \"../../features/querySlice\";\nimport { getItems } from \"../../features/productSlice\";\nimport { getStockByBrands } from \"../../features/allProductsSlice\";\nimport { getFilteredItemsNumber } from \"../../features/filteredProducts\";\nimport useDidMountEffect from \"../../helpers/useDidMountEffect\";\nimport Spinner from \"./../spinner\";\nconst TagsFilter = () => {\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [selected, setSelected] = useState([\"All\"]);\n  const querySelector = useSelector((state) => state.query.value);\n  const selectTags = useSelector((state) => state.allProducts.stockByTag);\n  const selectBrands = useSelector((state) => state.brand.value);\n  const productsNumberSelector = useSelector((state) => state.filteredProducts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    if (e.target.id === \"All\") {\n      setSelected(\n        selected.includes(\"All\")\n          ? selected.filter((item) => item !== \"All\")\n          : [\"All\"]\n      );\n    } else {\n      let filtered = selected;\n      if (selected.includes(\"All\")) {\n        filtered = selected.filter((item) => item !== \"All\");\n      }\n      setSelected(\n        filtered.includes(e.target.id)\n          ? filtered.filter((item) => item !== e.target.id)\n          : [...filtered, e.target.id]\n      );\n    }\n    let query = `tags_like=(?<!\\\\s)\\\\b${e.target.id}\\\\b(?!\\\\s)`;\n    dispatch(setQuery(query));\n  };\n\n  useDidMountEffect(() => {\n    if (productsNumberSelector.status === \"fulfilled\"){\n      console.log(\"Brands should update\");\n      dispatch(\n        getStockByBrands({\n          query:querySelector,\n          brands: selectBrands,\n          selected: selected,\n          filteredProductsNum: productsNumberSelector.currentProductNumber,\n        })\n      );}\n  }, [productsNumberSelector]);\n\n  useDidMountEffect(() => {\n    dispatch(getItems(querySelector));\n    dispatch(getFilteredItemsNumber());\n  }, [selected]);\n\n  useDidMountEffect(() => {\n    let res = selectTags.filter((tag) =>\n      tag.tag.toLocaleLowerCase().includes(search.toLocaleLowerCase())\n    );\n    setSearchResults(res);\n  }, [search]);\n\n  return (\n    <>\n      <input\n        onChange={(e) => setSearch(e.target.value)}\n        value={search}\n        type=\"text\"\n        placeholder=\"Search tag\"\n        className=\"search-bar\"\n      />\n      <div className=\"filter-body custom-scrollbar\">\n        {selectTags.length ? (\n          (searchResults.length ? searchResults : selectTags).map((tag, i) =>\n            tag.products ? (\n              <div className=\"form-group filter-item\" key={i}>\n                <input\n                  key={selected}\n                  onChange={handleChange}\n                  type=\"checkbox\"\n                  className=\"custom-checkbox\"\n                  name=\"\"\n                  id={tag.tag}\n                  defaultChecked={selected.includes(tag.tag)\n                  }\n                />\n                <label\n                  className=\"filtering-label text-secondary\"\n                  htmlFor={tag.tag}\n                >\n                  {tag.tag}{\" \"}\n                  <span className=\"text-dark-gray \">({tag.products})</span>\n                </label>\n              </div>\n            ) : null\n          )\n        ) : (\n          <Spinner />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default TagsFilter;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector} from \"react-redux\";\nimport { getFilteredItemsNumber } from \"../../features/filteredProducts\";\nimport { getItems } from \"../../features/productSlice\";\nimport { setQuery } from \"../../features/querySlice\";\n\nconst Sort = () => {\n  const [checkedOption, setCheckedOption] = useState(\"\");\n  const dispatch = useDispatch();\n  const selectQuery = useSelector(state=>state.query.value)\n  const handleChange = (e) => {\n    setCheckedOption(checkedOption === e.target.id ? \"\" : e.target.id)\n    let query = `_sort=${\n      /price/.test(e.target.id) ? \"price\" : \"added\"\n    }&_order=${/Asc/.test(e.target.id) ? \"asc\" : \"desc\"}`;\n    dispatch(setQuery(query));\n    dispatch(getItems(selectQuery))\n    dispatch(getFilteredItemsNumber())\n    \n    \n  };\n\n  const inputsArray = [\n    {testId:\"sort-radio\", name: \"priceAsc\", label: \"Price low to high\" },\n    {testId:\"sort-radio\", name: \"priceDesc\", label: \"Price high to low\" },\n    {testId:\"sort-radio\", name: \"dateDesc\", label: \"New to old\" },\n    {testId:\"sort-radio\", name: \"dateAsc\", label: \"Old to new\" },\n  ];\n\n  return (\n    <>\n      {inputsArray.map((input, i) => (\n        <div className=\"filter-item\" key={i}>\n          <input\n          defaultChecked={input.name === checkedOption}\n            onClick={handleChange}\n            // onChange={handleChange}\n            id={input.name}\n            type=\"radio\"\n            data-testid=\"test-sort-radio\"\n            value={input.name}\n            className=\"custom-radio\"\n            name=\"sort-radio\"\n          />\n          <label className=\"sorting-label text-secondary\" htmlFor={input.name}>{input.label}</label>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Sort;\n","import React, { useEffect } from \"react\";\nimport BrandFilter from \"./brandFilter\";\nimport TagFilter from \"./tagFilter\";\nimport Sort from \"./sort\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllItems,\n  getStockByBrands,\n  getStockByTags,\n  getTags,\n} from \"../../features/allProductsSlice\";\nimport { getBrands } from \"../../features/brandSlice\";\nimport useDidMountEffect from \"../../helpers/useDidMountEffect\";\nimport { getFilteredItemsNumber } from \"../../features/filteredProducts\";\n\nconst Options = () => {\n  const dispatch = useDispatch();\n  const selectBrands = useSelector((state) => state.brand);\n  const selectAllProducts = useSelector((state) => state.allProducts);\n\n  useEffect(() => {\n    dispatch(getAllItems());\n    dispatch(getBrands());\n    dispatch(getFilteredItemsNumber())\n  }, []);\n  \n  useDidMountEffect(() => {\n    if (selectAllProducts.status === \"fulfilled\") {\n      dispatch(getTags());\n      dispatch(getStockByTags({selected:[],filteredProductsNum:selectAllProducts.value.length}));\n    }\n  }, [selectAllProducts.status]);\n\n  useDidMountEffect(() => {\n    if (\n      selectBrands.status === \"fulfilled\" &&\n      selectAllProducts.status === \"fulfilled\"\n    ) {\n      dispatch(getStockByBrands({ brands: selectBrands.value, selected: [],filteredProductsNum:selectAllProducts.value.length }));\n    }\n  }, [selectBrands.status, selectAllProducts.status]);\n\n  return (\n    <>\n      <div className=\"filters\">\n        <span className=\"filters-title\">Sorting</span>\n        <div className=\"filter-container\">\n          <Sort />\n        </div>\n        <span className=\"filters-title\">Brands</span>\n        <div className=\"filter-container\">\n          <BrandFilter />\n        </div>\n        <span className=\"filters-title\">Tags</span>\n        <div className=\"filter-container\">\n          <TagFilter />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Options;\n","import { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n\n\nconst useDidMountEffect = (func, dependacyArray) => {\n    const didMount = useRef(false);\n\n    useEffect(() => {\n        if (didMount.current) func();\n        else didMount.current = true;\n    }, dependacyArray);\n}\n\nuseDidMountEffect.propTypes  = {\n    func: PropTypes.func,\n    dependacyArray: PropTypes.array,\n  };\n\nexport default useDidMountEffect;","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useState","search","setSearch","searchResults","setSearchResults","selected","setSelected","querySelector","useSelector","state","query","value","selectBrand","allProducts","stockByBrand","productsNumberSelector","filteredProducts","showSpinner","setShowSpinner","dispatch","useDispatch","useTransition","startTransition","useDidMountEffect","res","filter","brand","name","toLocaleLowerCase","includes","handleChange","e","target","item","filtered","id","setQuery","status","console","log","getStockByTags","filteredProductsNum","currentProductNumber","getItems","getFilteredItemsNumber","onChange","type","placeholder","className","length","map","i","products","slug","defaultChecked","htmlFor","selectTags","stockByTag","selectBrands","getStockByBrands","brands","tag","checkedOption","setCheckedOption","selectQuery","test","testId","label","input","onClick","selectAllProducts","useEffect","getAllItems","getBrands","getTags","func","dependacyArray","didMount","useRef","current","propTypes","PropTypes","_slicedToArray","arr","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}