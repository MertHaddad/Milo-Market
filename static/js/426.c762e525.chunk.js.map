{"version":3,"file":"static/js/426.c762e525.chunk.js","mappings":"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","sources":["components/pagination/usePagination.jsx","components/pagination/pagination.jsx"],"sourcesContent":["import { useMemo } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const DOTS = \"...\";\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\n\n\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount,\n  currentPage,\n}) => {\n\n\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\n    const totalPageNumbers = siblingCount;\n\n    // # hide pagination when there's no enough pages to navigate.\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    //evaluate showing dots situation:\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 2 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      // let rightItemCount = 3 + 2 * siblingCount;\n      let rightItemCount = currentPage -1 \n      \n      let rightRange = range(\n        rightItemCount,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n\n    if (!shouldShowLeftDots && !shouldShowRightDots){\n\n      let leftRange = range(1, totalPageCount);\n\n      return [...leftRange];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n  return paginationRange;\n};\n\nusePagination.propTypes = {\n  totalCount : PropTypes.number,\n  pageSize : PropTypes.number,\n  siblingCount : PropTypes.number,\n  currentPage : PropTypes.number,\n};","import React, { useState } from \"react\";\nimport { usePagination, DOTS } from \"./usePagination\";\nimport \"./../../assets/css/pagination.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setQuery } from \"../../features/querySlice\";\nimport { getItems } from \"../../features/productSlice\";\nimport useDidMountEffect from \"../../helpers/useDidMountEffect\";\nconst Pagination = () => {\n  const dispatch = useDispatch();\n  const selectQuery = useSelector((state) => state.query.value);\n  const filteredProducts = useSelector((state) => state.filteredProducts);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPageChange = (p) => {\n    if (currentPage !== p) {\n      setCurrentPage(p);\n      const query = `_page=${p}&_limit=20`;\n      dispatch(setQuery(query));\n      dispatch(getItems(selectQuery));\n    }\n  };\n\n  useDidMountEffect(() => {\n    onPageChange(1);\n  }, [filteredProducts.currentProductNumber]);\n\n  let totalCount = filteredProducts.currentProductNumber;\n  const siblingCount = 1;\n  const pageSize = 24;\n\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize,\n  });\n\n  if (currentPage === 0 || paginationRange?.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  let lastPage = paginationRange[paginationRange?.length - 1];\n  return (\n    <nav role=\"navigation\">\n      <ul className=\"pagination-container\">\n        <li>\n          <button\n            className={`pagination-item ${currentPage === 1 ? \"disabled\" : \"\"}`}\n            onClick={onPrevious}\n            disabled={currentPage === 1}\n          >\n            {\"<\"} Prev\n          </button>\n        </li>\n        {paginationRange.map((pageNumber, i) => {\n          if (pageNumber === DOTS) {\n            return (\n              <li key={i + \"dot\"} className=\"pagination-item dots\">\n                &#8230;\n              </li>\n            );\n          }\n\n          return (\n            <li key={i}>\n              <button\n                type=\"button\"\n                className={`pagination-item ${\n                  pageNumber === currentPage ? \"selected\" : \"\"\n                }`}\n                onClick={() => onPageChange(pageNumber)}\n              >\n                {pageNumber}\n              </button>\n            </li>\n          );\n        })}\n        <button\n          className={`pagination-item ${\n            currentPage === lastPage ? \"disabled\" : \"\"\n          }`}\n          onClick={onNext}\n          disabled={currentPage === lastPage}\n        >\n          Next {\">\"}\n        </button>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n"],"names":["DOTS","range","start","end","length","Array","from","_","idx","usePagination","totalCount","pageSize","siblingCount","currentPage","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","propTypes","PropTypes","dispatch","useDispatch","selectQuery","useSelector","state","query","value","filteredProducts","useState","setCurrentPage","onPageChange","p","setQuery","getItems","useDidMountEffect","currentProductNumber","paginationRange","lastPage","role","className","onClick","disabled","map","pageNumber","i","type"],"sourceRoot":""}